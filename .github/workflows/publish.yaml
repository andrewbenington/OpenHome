name: 'publish'

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # - platform: 'macos-latest' # for Arm based macs (M1 and above).
          #   args: '--target aarch64-apple-darwin'
          # - platform: 'macos-latest' # for Intel based macs.
          #   args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            target: 'x86_64-unknown-linux-gnu'
            args: ''
          - platform: 'windows-latest'
            target: 'x86_64-pc-windows-msvc'
            args: ''
          - platform: 'windows-latest'
            target: 'aarch64-pc-windows-msvc'
            args: '--target aarch64-pc-windows-msvc'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || matrix.platform == 'windows-latest' && matrix.target == 'aarch64-pc-windows-msvc' && 'aarch64-pc-windows-msvc' || matrix.platform == 'ubuntu-22.04' && matrix.target == 'aarch64-unknown-linux-gnu' && 'aarch64-unknown-linux-gnu' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: npm install # change this to npm, pnpm or bun depending on which one you use.

      - name: build version.json (unix)
        if: matrix.platform != 'windows-latest'
        run: mkdir src/consts/JSON && ./buildVersionJSON.sh

      - name: build version.json (windows)
        if: matrix.platform == 'windows-latest'
        run: powershell -ExecutionPolicy Bypass -File ./buildVersionJSON.ps1

      - uses: tauri-apps/tauri-action@v0.5.16
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'OpenHome v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
